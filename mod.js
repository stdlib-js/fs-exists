// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var t,r=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,c=n.__defineSetter__,l=n.__lookupGetter__,u=n.__lookupSetter__;t=function(){try{return e({},"x",{}),!0}catch(e){return!1}}()?r:function(e,t,r){var i,_,f,s;if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+r+"`.");if((_="value"in r)&&(l.call(e,t)||u.call(e,t)?(i=e.__proto__,e.__proto__=n,delete e[t],e[t]=r.value,e.__proto__=i):e[t]=r.value),f="get"in r,s="set"in r,_&&(f||s))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return f&&a&&a.call(e,t,r.get),s&&c&&c.call(e,t,r.set),e};var i,_,f={};function s(e,t){i(e,(function(e){if(2===t.length)return e?t(e,!1):t(null,!0);if(e)return t(!1);return t(!0)}))}function p(e){try{_(e)}catch(e){return!1}return!0}i="function"==typeof f.access?f.access:f.stat,_="function"==typeof f.accessSync?f.accessSync:f.statSync,t(s,"sync",{configurable:!1,enumerable:!1,writable:!1,value:p});export{s as default,p as sync};
//# sourceMappingURL=mod.js.map
