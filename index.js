// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var e,t;e=this,t=function(e){"use strict";var t,r="function"==typeof Object.defineProperty?Object.defineProperty:null,n=Object.defineProperty,o=Object.prototype,c=o.toString,a=o.__defineGetter__,i=o.__defineSetter__,l=o.__lookupGetter__,u=o.__lookupSetter__;t=function(){try{return r({},"x",{}),!0}catch(e){return!1}}()?n:function(e,t,r){var n,f,s,p;if("object"!=typeof e||null===e||"[object Array]"===c.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof r||null===r||"[object Array]"===c.call(r))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+r+"`.");if((f="value"in r)&&(l.call(e,t)||u.call(e,t)?(n=e.__proto__,e.__proto__=o,delete e[t],e[t]=r.value,e.__proto__=n):e[t]=r.value),s="get"in r,p="set"in r,f&&(s||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return s&&a&&a.call(e,t,r.get),p&&i&&i.call(e,t,r.set),e};var f,s,p={};function _(e,t){f(e,(function(e){return 2===t.length?e?t(e,!1):t(null,!0):t(!e)}))}function y(e){try{s(e)}catch(e){return!1}return!0}f="function"==typeof p.access?p.access:p.stat,s="function"==typeof p.accessSync?p.accessSync:p.statSync,t(_,"sync",{configurable:!1,enumerable:!1,writable:!1,value:y}),e.default=_,e.sync=y,Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).exists={});
//# sourceMappingURL=index.js.map
